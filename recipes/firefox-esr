name=firefox-esr
version=115.6.0esr
revision=1
tarball_url="https://archive.mozilla.org/pub/firefox/releases/${version}/source/firefox-${version}.source.tar.xz"
tarball_blake2b="80ab9a45f9170265751a913e789a54acd0503846a77e43fbfe181c3d5846d5945f5c4f4bf3a35231e250e15377f8d4abd0a01617b3a3b0f94197450300111360"
builddeps="base cbindgen llvm nasm nodejs python python-diskcache rustc unzip"
deps="core-libs curl dbus-glib ffmpeg gtk+-3 icu libevent libnotify liboauth libvpx libwebp nss pciutils pulseaudio startup-notification wireless-tools"
allow_network=yes

build() {
    cp -rp "${source_dir}"/. ./

    # TODO: Replace these keys with our own keys
    echo "AIzaSyDxKL42zsPjbke5O8_rPVpVrLrJ8aeE9rQ" > google-key
    echo "613364a7-9418-4c86-bcee-57e32fd70c23" > mozilla-key

    cat > "mozconfig" << EOF
# If you have a multicore machine, all cores will be used by default.

# If you have installed (or will install) wireless-tools, and you wish
# to use geolocation web services, comment out this line
#ac_add_options --disable-necko-wifi

# API Keys for geolocation APIs - necko-wifi (above) is required for MLS
# Uncomment the following line if you wish to use Mozilla Location Service
ac_add_options --with-mozilla-api-keyfile=\$PWD/mozilla-key

# Uncomment the following line if you wish to use Google's geolocation API
# (needed for use with saved maps with Google Maps)
ac_add_options --with-google-location-service-api-keyfile=\$PWD/google-key

# startup-notification is required since firefox-78

# Uncomment the following option if you have not installed PulseAudio and
# want to use alsa instead
#ac_add_options --enable-audio-backends=alsa

# Comment out following options if you have not installed
# recommended dependencies:
ac_add_options --with-system-icu
ac_add_options --with-system-libevent
ac_add_options --with-system-libvpx
ac_add_options --with-system-nspr
ac_add_options --with-system-nss
ac_add_options --with-system-webp

# Unlike with thunderbird, although using the gold linker can
# save four megabytes in the installed file it does not make
# the build faster.

# The libdav1d library (av1 decoder) requires nasm. Uncomment this
# if nasm has not been installed. Do not uncomment this if you have
# ffmpeg installed.
#ac_add_options --disable-av1

# You cannot distribute the binary if you do this.
ac_add_options --enable-official-branding

# Stripping is now enabled by default.
# Uncomment these lines if you need to run a debugger:
#ac_add_options --disable-strip
#ac_add_options --disable-install-strip

# Disabling debug symbols makes the build much smaller and a little
# faster. Comment this if you need to run a debugger. Note: This is
# required for compilation on i686.
ac_add_options --disable-debug-symbols

# The elf-hack is reported to cause failed installs (after successful builds)
# on some machines. It is supposed to improve startup time and it shrinks
# libxul.so by a few MB.  With recent Binutils releases the linker already
# supports a much safer and generic way for this.
ac_add_options --disable-elf-hack
export LDFLAGS="\$LDFLAGS -Wl,-z,pack-relative-relocs"

# The BLFS editors recommend not changing anything below this line:
ac_add_options --prefix=${prefix}
ac_add_options --enable-application=browser
ac_add_options --disable-crashreporter
ac_add_options --disable-updater

# Enabling the tests will use a lot more space and significantly
# increase the build time, for no obvious benefit.
ac_add_options --disable-tests

# This enables SIMD optimization in the shipped encoding_rs crate.
ac_add_options --enable-rust-simd

ac_add_options --enable-system-ffi
ac_add_options --enable-system-pixman

ac_add_options --with-system-jpeg
ac_add_options --with-system-png
ac_add_options --with-system-zlib

# Sandboxing works well on x86_64 but might cause issues on other
# platforms. If not on x86_64, e.g. i686, it is recommended to
# uncomment the following switch.
#ac_add_options --disable-sandbox

# Using sandboxed wasm libraries has been moved to all builds instead
# of only mozilla automation builds. It requires extra llvm packages
# and was reported to seriously slow the build. Disable it.
ac_add_options --without-wasm-sandboxed-libraries

# The following option unsets Telemetry Reporting. With the Addons Fiasco,
# Mozilla was found to be collecting user's data, including saved passwords and
# web form data, without users consent. Mozilla was also found shipping updates
# to systems without the user's knowledge or permission.
# As a result of this, use the following command to permanently disable
# telemetry reporting in Firefox.
unset MOZ_TELEMETRY_REPORTING

mk_add_options MOZ_OBJDIR=\$PWD/obj
EOF

    export CC=gcc
    export CXX=g++
    export MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=none
    export MOZBUILD_STATE_PATH=/tmp/mozbuild

    _build_dir="$(pwd -P)"
    cd "${_build_dir}"

    ./mach configure --disable-unified-build
    ./mach build -j${parallelism}
}

package() {
    export MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=none
    export MOZBUILD_STATE_PATH=/tmp/mozbuild

    DESTDIR="${dest_dir}" ./mach install

    mkdir -pv "${dest_dir}${prefix}/share/applications"
    cat > "${dest_dir}${prefix}/share/applications/firefox.desktop" << EOF
[Desktop Entry]
Encoding=UTF-8
Name=Firefox Web Browser
Comment=Browse the World Wide Web
GenericName=Web Browser
Exec=firefox %u
Terminal=false
Type=Application
Icon=firefox
Categories=GNOME;GTK;Network;WebBrowser;
MimeType=text/xml;text/mml;text/html;application/xhtml+xml;application/vnd.mozilla.xul+xml;x-scheme-handler/http;x-scheme-handler/https
StartupNotify=true
EOF

    mkdir -pv "${dest_dir}${prefix}/share/pixmaps"
    ln -sfv ../../firefox/browser/chrome/icons/default/default128.png \
        "${dest_dir}${prefix}/share/pixmaps/firefox.png"

    post_package_strip
}
